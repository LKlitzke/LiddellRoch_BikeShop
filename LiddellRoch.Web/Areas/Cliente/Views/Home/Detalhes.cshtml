@using LiddellRoch.Application.DTOs
@using LiddellRoch.Application.Services
@using LiddellRoch.Application.Services.Interfaces
@using LiddellRoch.DataAccess.Repository.Interfaces

@model CarrinhoCompras
@inject IAvaliacaoService AvaliacaoService
@inject IUnitOfWork UnitOfWork
@{
    var compList = Componentes.GetAll();
    var coresList = Model.Bicicleta.Cores.Split(",").ToList();
}
<div class="row pb-3 container" style="margin: 0 auto;">
    <form method="post">
        <input hidden asp-for="BicicletaId" />
        <div class="border-0 mt-4 mb-4">
            @* <div class="card-header bg-secondary bg-gradient text-light py-4">
            <div class="row">
            <div class="col-12 text-center">
            <h3 class="text-white text-uppercase">@Model.Bicicleta.Nome</h3>
            <p class="text-white-50 fw-semibold mb-0">@Model.Bicicleta.Marca.Nome</p>
            </div>
            </div>
            </div> *@
            <div class="">
                <div class="py-3">
                    <div class="row">
                        <div class="col-12 mx-5 pb-1 mb-4">
                            <a href="#" onclick="history.back()" class="btn btn-outline-primary bg-gradient fw-semibold btn-sm text-uppercase">
                                <i class="fa-solid fa-circle-chevron-left"></i>&nbsp; &nbsp;<span>Voltar</span>
                            </a>
                            @if(User.IsInRole(SD.Role_Administrador) || User.IsInRole(SD.Role_Empregado))
                            {
                                <a asp-area="Admin" asp-controller="Bicicleta" asp-action="Upsert" asp-route-id="@Model.BicicletaId" class="btn btn-outline-secondary bg-gradient fw-semibold btn-sm text-uppercase">
                                    <i class="bi bi-pencil-square"></i>&nbsp; &nbsp;<span>Editar detalhes</span>
                                </a>
                            }
                        </div>

                        
                    </div>
                    <div class="row mx-5">
                        <div class="col-md-5 col-12 text-center mb-3 px-0">
                            <div class="mb-3 d-flex justify-content-evenly align-items-center">
                                    <img src="@Model.Bicicleta.Marca.IconUrl" alt="icone-marca" style="max-height:100px; object-fit:contain; width:20%" />
                                    <a href="#userRatingsSummary">
                                        <span style="text-align:right" href="">

                                            @{
                                                var media = Model.Bicicleta.Avaliacoes.Count > 0 ? AvaliacaoService.GetMediaAvaliacoes(Model.BicicletaId) : 0;
                                                for (int i = 0; i < media; i++)
                                                {
                                                    <i class="bi bi-star-fill" style="color: gold;"></i>
                                                }
                                                var dif = (5 - media);
                                                for (int i = 0; i < dif; i++)
                                                {
                                                    <i class="bi bi-star" style="color: gold;"></i>
                                                }
                                            }
                                            <span class="text-muted">(@(Model.Bicicleta.Avaliacoes.Count))</span>
                                        </span>
                                    </a>

                            </div>
                            @if (Model.Bicicleta.ImagensProduto != null && Model.Bicicleta.ImagensProduto.Count > 0)
                            {
                                <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel" data-bs-interval="50000" style="object-fit:contain;width: 100%;display: flex; margin: 0 auto;">

                                    <div class="carousel-inner" style="border:1px #ccc solid">
                                        <div class="carousel-indicators" style="height:0.5rem">
                                            @foreach (var imageWithIndex in Model.Bicicleta.ImagensProduto
                                           .Select((image, index) => new { Image = image, Index = index }))
                                            {
                                                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@imageWithIndex.Index"
                                                        class="@(imageWithIndex.Index==0?"active":"")" aria-current="true" aria-label="Slide 1"></button>
                                            }
                                        </div>
                                        @foreach (var imageWithIndex in Model.Bicicleta.ImagensProduto
                                       .Select((image, index) => new { Image = image, Index = index }))
                                        {
                                            <div class="@(imageWithIndex.Index==0?"carousel-item active":"carousel-item")" id="container">
                                                <img src="@imageWithIndex.Image.ImagemUrl" class="d-block w-100" style="height:400px;object-fit: contain; cursor: pointer" alt="Bike imagem" id="imgX">
                                            </div>
                                        }
                                        @if (Model.Bicicleta.ImagensProduto.Count > 1)
                                        {
                                            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev" style="background-color:rgba(214, 214, 214, 0.5); width: 10%">
                                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                                <span class="visually-hidden">Previous</span>
                                            </button>
                                            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next" style="background-color:rgba(214, 214, 214, 0.5); width: 10%">
                                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                                <span class="visually-hidden">Next</span>
                                            </button>
                                        }
                                    </div>
                                </div>
                            }
                            else
                            {
                                <img src="@("https://source.unsplash.com/random/500x600?sig=" + Model.BicicletaId)" class="card-img-top rounded" />
                            }

                        </div>
                        <div class="col-md-7 col-12 pl-2">
                            <div class="row">
                                <div class="col-xl-8">
                                    <h2 class="text-dark mb-0">@Model.Bicicleta.Marca.Nome @Model.Bicicleta.Nome</h2>
                                </div>
                                <div class="col-xl-4" style="align-self: center; width: max-content;">
                                    
                                    @if (Model.Bicicleta.Estoque < 10)
                                    {
                                        var estoqueText = Model.Bicicleta.Estoque == 1 ? "RESTANTE" : "RESTANTES";
                                        <span class="bikeBadge badge bg-danger w-100 h-100 fs-5 flex align-content-center"><i class="bi bi-fire me-1" style="color:orange;"></i> @Model.Bicicleta.Estoque @estoqueText!</span>
                                    }
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <h6 class="text-dark"><strong>Categoria:</strong> @Model.Bicicleta.Categoria.Nome</h6>
                            </div>
                            <div class="row">
                                <h6 class="text-dark"><strong>Estoque:</strong> @Model.Bicicleta.Estoque unidades</h6>
                            </div>
                            <div class="row">
                                <h6 class="text-dark"><strong>Tamanhos:</strong> @Model.Bicicleta.Tamanhos.Replace(",", ", ")</h6>
                            </div>
                            <div class="row">
                                <h6 class="text-dark"><strong>Peso aproximado:</strong> @Model.Bicicleta.Peso kg</h6>
                            </div>
                            <div class="row">
                                <h6 class="text-dark pb-2 d-flex align-items-center">
                                    <strong>Cores:</strong>&nbsp;
                                    @foreach (var i in coresList)
                                    {
                                        var css = $"cursor: pointer; height: 20px;width: 20px;background-color:{i};border-radius: 50%; display: inline-block;";
                                        <span class="dot" style="@css" title="@i"></span>
                                    }
                                </h6>
                            </div>
                            <div class="row mt-1">
                                <div class="pl-1">
                                    <p class="text-dark text-opacity-75 mb-1">
                                        De:
                                        <span style="text-decoration: line-through;">
                                            @((Model.Bicicleta.Preco * 1.1m).ToString("c"))
                                        </span>
                                    </p>
                                </div>
                                <div class="pl-1">
                                    <p class="text-dark text-opacity-75 mb-3">
                                        Por:
                                        <span class="text-dark" style="font-weight:bold; font-size:large">
                                            @((Model.Bicicleta.Preco).ToString("c"))
                                        </span>
                                        <span style="font-size:small">em 12 vezes sem juros ou</span>
                                        <br>
                                        <span class="text-success fs-3 fw-semibold">
                                            @Model.Bicicleta.ValorComDesconto.ToString("c")
                                        </span>
                                        <strong>(@Model.Bicicleta.DescontoPromocao% OFF no PIX ou boleto)</strong>
                                    </p>
                                </div>
                            </div>
                            
                            <div class="row pl-2 mb-3">
                                <div class="col-md-12">
                                    <div class="input-group mb-3" style="width: 25% !important;min-width: fit-content;">
                                        <span class="input-group-text bg-primary text-white border-0 fw-semibold"
                                              id="inputGroup-sizing-default">
                                            Unidades
                                        </span>
                                        <input asp-for="Quantidade" type="number" value="1" min="1" max="@Model.Bicicleta.Estoque" class="form-control text-end"
                                               aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default" />

                                    </div>
                                    <span id="Quantidade-error" @* asp-validation-for="Quantidade" *@ class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12 col-md-6 pb-1">
                                    <button type="submit" id="submit-btn"
                                            class="btn btn-success bg-gradient w-100 py-2 text-uppercase fw-semibold">
                                        <i class="bi bi-cart-plus-fill"></i> Adicionar ao carrinho
                                    </button>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="mx-5 pt-5">
                        <div class="pb-1">
                            <h3><i class="bi bi-file-earmark-text-fill fs-4" style="color: var(--bs-primary)"></i> DESCRIÇÃO</h3><hr />
                        </div>
                        <div class="row pl-2 my-1">
                            @Html.Raw(Model.Bicicleta.Descricao)
                        </div>
                    </div>

                    @if (Model.Bicicleta.Componentes.Count > 0)
                    {
                        <div class="mx-5 pt-3">
                            <div class="pb-1">
                                <h3><i class="bi bi-gear-wide fs-4" style="color: var(--bs-primary)"></i> FICHA TÉCNICA</h3><hr />
                            </div>
                            <div class="row pl-2 my-1">
                                @foreach (var componente in Model.Bicicleta.Componentes)
                                {
                                    var item = compList.FirstOrDefault(c => c.Id == componente.TipoComponenteId);
                                    <div class="col-md-6 mb-3">
                                        <div class="mb-1"> <img class="imgIcon" src="~/images/componentes/@item.Icone" /> <strong>@item.Nome</strong></div>
                                        <h6 style="margin-left: 50px;min-height: 2rem;">
                                            @componente.Valor
                                        </h6>
                                        
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    <div class="mx-5 pt-3">
                        <div class="pb-1">
                            <h3><i class="bi bi-file-earmark-text-fill fs-4" style="color: var(--bs-primary)"></i> GARANTIA</h3><hr />
                        </div>
                        <div class="pl-2 my-1" style="text-align:justify">
                            Garantia padrão de 30 dias após o recebimento do produto, conforme o Art. 26 do Código de Defesa do Consumidor.
                            Adicionalmente, fornecemos garantia de 5 anos para o quadro, 3 meses para componentes e 6 meses para a pintura.
                            Para devoluções, os produtos devem ser remetidos em suas embalagens originais, não abrangendo casos de mau uso.
                        </div>
                    </div>

                    @if(Model.Bicicleta.Avaliacoes.Count > 0)
                    {
                        <div class="mx-5 pt-3 my-2" id="userRatingsSummary">
                            <div class="pb-1">
                                <h3 class="mb-3"><i class="bi bi-star-fill fs-4" style="color: var(--bs-primary)"></i> AVALIAÇÕES DOS USUÁRIOS</h3><hr />
                                <div class="row ratingGrid" style="display: grid; gap: 1rem;margin-left: auto;">
                                    @foreach (var item in Model.Bicicleta.Avaliacoes.OrderBy(e => e.DataAvaliacao))
                                    {
                                        var pedidoHeaderUser = UnitOfWork.PedidoHeader.GetFirstOrDefault(e => e.Id == item.PedidoHeaderId).ApplicationUserId;
                                        var user = UnitOfWork.ApplicationUser.GetFirstOrDefault(i => i.Id == pedidoHeaderUser);
                                        var userName = user.Nome == "Administrador" ? "Anônimo" : user.Nome;

                                        <div class="card p-0" style="">
                                            <div class="card-header">
                                                @for (int i = 0; i < item.AvaliacaoCompra; i++)
                                                {
                                                    <i class="bi bi-star-fill" style="color: gold;"></i>
                                                }
                                                @{
                                                    var dife = (5 - item.AvaliacaoCompra);
                                                    for (int i = 0; i < dife; i++)
                                                    {
                                                        <i class="bi bi-star" style="color: gold;"></i>
                                                    }
                                                }
                                                <h6 class="text-muted fs-6 text">Avaliado em @item.DataAvaliacao.ToShortDateString()</h6>
                                            </div>
                                            <div class="card-body">
                                                <blockquote class="blockquote mb-0">
                                                    <p style="text-align:justify">"@item.ComentarioCompra"</p>
                                                    <footer class="blockquote-footer text-muted">@userName</footer>
                                                </blockquote>
                                            </div>
                                        </div>

                                    }
                                </div>

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </form>

</div>

<script>
    const carouselItems = document.querySelectorAll(".carousel-item");
    const carouselImgs = document.querySelectorAll(".carousel-item img");

    carouselItems.forEach(item => {
        item.addEventListener("mousemove", onZoom);
        item.addEventListener("mouseover", onZoom);
        item.addEventListener("mouseleave", offZoom);
    });

    function onZoom(e) {
        const x = e.clientX - this.offsetLeft - 150;
        const y = e.clientY - this.offsetTop - 150;

        this.querySelector('img').style.transformOrigin = `${x}px ${y}px`;
        this.querySelector('img').style.transform = "scale(1.5)";
    }

    function offZoom(e) {
        this.querySelector('img').style.transformOrigin = "center center";
        this.querySelector('img').style.transform = "scale(1)";
    }

    document.getElementById("Quantidade").addEventListener("input", function () {
        var estoque = parseInt("@Model.Bicicleta.Estoque");
        var quantidade = parseInt(this.value);

        if (quantidade < 1 || quantidade > estoque) {
            document.getElementById("Quantidade-error").textContent = "O valor da unidade deve estar entre 1 e " + estoque;
            document.getElementById("submit-btn").classList.add("disabled");
        } else {
            document.getElementById("Quantidade-error").textContent = "";
            document.getElementById("submit-btn").classList.remove("disabled");
        }
    });

</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<style>
    .imgIcon {
        width: 40px;
        height: 40px;
        flex-grow: 0;
        flex-shrink: 0;
        margin-right: 5px;
        object-fit: contain;
    }
    html {
        scroll-behavior: smooth;
    }

    @@media screen and (min-width: 993px) {
        .ratingGrid {
            grid-template-columns: 1fr 1fr;
        }
    }

    .carousel-inner .item img {
        width: 640px;
        height:360px;
    }
</style>

